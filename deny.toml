# cargo-deny configuration
[graph]
all-features = true

[licenses]
# Allow specific licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
]

# Deny copyleft licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-1.0",
    "AGPL-3.0",
]

confidence-threshold = 0.8

[bans]
# Deny multiple versions of the same crate
multiple-versions = "deny"
wildcards = "allow"

# Specific crates to deny
deny = [
    # Deny old versions of crates with known vulnerabilities
    { name = "openssl", version = "<0.10.55" },
]

# Skip certain crates for multiple version checking
skip = [
    # Allow multiple versions of these crates due to ecosystem fragmentation
    { name = "windows-sys" },
    { name = "windows_x86_64_msvc" },
    { name = "windows_x86_64_gnu" },
    { name = "windows_aarch64_msvc" },
    { name = "windows_i686_msvc" },
    { name = "windows_i686_gnu" },
]

skip-tree = [
    # Skip checking dependencies of these crates
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates that have been yanked from their source registry
yanked = "warn"
# The lint level for crates with security notices
notice = "warn"

# A list of advisory IDs to ignore
ignore = [
    # Add specific advisories to ignore if needed
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

allow-registry = ["https://github.com/rust-lang/crates.io-index"]
allow-git = []